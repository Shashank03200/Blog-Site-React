{"version":3,"sources":["store/auth-context.js","App.js","index.js"],"names":["AuthContext","createContext","email","isLoggedIn","userId","token","isButtonVisible","setNewBtnState","loginHandler","localId","idToken","logoutHandler","AuthContextProvider","props","initialToken","localStorage","getItem","initialId","initialEmail","useState","authData","setAuthData","setEmail","setIsButtonVisible","useEffect","Provider","value","setItem","prevState","removeItem","btnProp","children","HomePage","React","lazy","Layout","AuthenticationPage","NewPost","AllPosts","HighlightedPost","ResetPassword","App","authCtx","useContext","fallback","path","exact","to","method","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.398c5de1.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react';\r\n\r\nconst AuthContext = createContext({\r\n    email: '',\r\n    isLoggedIn: false,\r\n    userId: null,\r\n    token: null,\r\n    isButtonVisible: false,\r\n    setNewBtnState: () => { },\r\n    loginHandler: (localId, idToken) => { },\r\n    logoutHandler: () => { }\r\n})\r\n\r\n\r\nexport const AuthContextProvider = (props) => {\r\n\r\n    const initialToken = localStorage.getItem('idToken');\r\n    const initialId = localStorage.getItem('userId');\r\n    const initialEmail = localStorage.getItem('email');\r\n\r\n    const [authData, setAuthData] = useState({\r\n        idToken: initialToken,\r\n        userId: initialId\r\n    });\r\n    const isLoggedIn = !!authData.idToken;\r\n    const [email, setEmail] = useState(initialEmail);\r\n    const [isButtonVisible, setIsButtonVisible] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (isLoggedIn) {\r\n            setIsButtonVisible(true)\r\n        } else {\r\n            setIsButtonVisible(false)\r\n        }\r\n    }, [isLoggedIn])\r\n\r\n\r\n    function loginHandler(localId, idToken, email) {\r\n\r\n        localStorage.setItem('idToken', idToken);\r\n        localStorage.setItem('email', email)\r\n        setAuthData(prevState => {\r\n            return {\r\n                ...prevState,\r\n                idToken: idToken,\r\n                userId: localId\r\n            }\r\n        });\r\n        setEmail(email);\r\n    }\r\n\r\n    function logoutHandler() {\r\n        setAuthData(prevState => {\r\n            return {\r\n                ...prevState,\r\n                idToken: null,\r\n                userId: null\r\n            }\r\n        })\r\n        setEmail(null);\r\n        localStorage.removeItem('userId');\r\n        localStorage.removeItem('idToken');\r\n        localStorage.removeItem('email');\r\n    }\r\n\r\n    function setNewBtnState(btnProp) {\r\n        setIsButtonVisible(btnProp)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ isLoggedIn, userId: authData.userId, token: authData.idToken, email, isButtonVisible, loginHandler, logoutHandler, setNewBtnState }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default AuthContext;","\r\nimport './App.css';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport React, { Fragment, useContext, Suspense } from 'react';\r\nimport AuthContext from './store/auth-context';\r\n\r\nconst HomePage = React.lazy(() => import('./components/HomePage'));\r\nconst Layout = React.lazy(() => import('./components/Layout/Layout'));\r\nconst AuthenticationPage = React.lazy(() => import('./components/AuthenticationPage'));\r\nconst NewPost = React.lazy(() => import('./components/NewPost'));\r\nconst AllPosts = React.lazy(() => import('./components/AllPosts'));\r\nconst HighlightedPost = React.lazy(() => import('./components/HighlightedPost'));\r\nconst ResetPassword = React.lazy(() => import('./components/ResetPassword'));\r\n\r\nfunction App() {\r\n\r\n  const authCtx = useContext(AuthContext);\r\n\r\n  const { isLoggedIn } = authCtx;\r\n\r\n  return (\r\n    <Suspense fallback=\"Loading.\">\r\n      <Layout />\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          {isLoggedIn && <Redirect to={`/${authCtx.userId}/posts`} />}\r\n          {!isLoggedIn && <HomePage />}\r\n        </Route>\r\n\r\n\r\n        <Route path=\"/login\">\r\n          {!isLoggedIn && <AuthenticationPage method=\"login\" />}\r\n          {isLoggedIn && <Redirect to={\"/\" + authCtx.userId + \"/posts\"} />}\r\n        </Route>\r\n\r\n\r\n        <Route path=\"/signup\">\r\n          {!isLoggedIn && <AuthenticationPage method=\"signup\" />}\r\n          {isLoggedIn && <Redirect to={\"/\" + authCtx.userId + \"/posts\"} />}\r\n        </Route>\r\n\r\n\r\n        <Route path=\"/:userId/new-post\">\r\n          {isLoggedIn && <NewPost />}\r\n          {!isLoggedIn && <Redirect to=\"/login\" />}\r\n        </Route>\r\n\r\n        <Route path=\"/:userId/resetPassword\">\r\n          {isLoggedIn && <ResetPassword />}\r\n          {!isLoggedIn && <Redirect to=\"/login\" />}\r\n        </Route>\r\n\r\n\r\n        <Route path=\"/:userId/posts\" exact>\r\n          {isLoggedIn && <AllPosts />}\r\n          {!isLoggedIn && <Redirect to=\"/login\" />}\r\n        </Route>\r\n\r\n\r\n        {isLoggedIn &&\r\n          <Route path={'/:userId/posts/:postId'}>\r\n            <HighlightedPost />\r\n          </Route>\r\n        }\r\n        <Route path=\"*\">\r\n          <Redirect to=\"/login\" />\r\n        </Route>\r\n      </Switch>\r\n    </Suspense>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { AuthContextProvider } from './store/auth-context';\n\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter>\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}